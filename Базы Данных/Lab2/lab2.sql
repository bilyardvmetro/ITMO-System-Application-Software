/* Задание 1
Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
Таблицы: Н_ЛЮДИ, Н_ВЕДОМОСТИ.
Вывести атрибуты: Н_ЛЮДИ.ИД, Н_ВЕДОМОСТИ.ДАТА.
Фильтры (AND):
a) Н_ЛЮДИ.ИД > 163484.
b) Н_ВЕДОМОСТИ.ИД = 39921.
c) Н_ВЕДОМОСТИ.ИД = 1426978.
Вид соединения: INNER JOIN.
*/

SELECT Н_ЛЮДИ.ИД, Н_ВЕДОМОСТИ.ДАТА
FROM Н_ЛЮДИ
INNER JOIN Н_ВЕДОМОСТИ ON Н_ВЕДОМОСТИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
WHERE Н_ЛЮДИ.ИД > 163484 AND (Н_ВЕДОМОСТИ.ИД IN (39921, 1426978));

/* Задание 2
Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
Таблицы: Н_ЛЮДИ, Н_ВЕДОМОСТИ, Н_СЕССИЯ.
Вывести атрибуты: Н_ЛЮДИ.ФАМИЛИЯ, Н_ВЕДОМОСТИ.ЧЛВК_ИД, Н_СЕССИЯ.ИД.
Фильтры (AND):
a) Н_ЛЮДИ.ИМЯ = Николай.
b) Н_ВЕДОМОСТИ.ЧЛВК_ИД > 117219.
Вид соединения: INNER JOIN.
*/

SELECT Н_ЛЮДИ.ФАМИЛИЯ, Н_ВЕДОМОСТИ.ЧЛВК_ИД, Н_СЕССИЯ.ИД
FROM Н_ЛЮДИ
INNER JOIN Н_ВЕДОМОСТИ ON Н_ВЕДОМОСТИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
INNER JOIN Н_СЕССИЯ ON Н_СЕССИЯ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
WHERE Н_ЛЮДИ.ИМЯ = 'Николай' AND Н_ВЕДОМОСТИ.ЧЛВК_ИД > 117219;

/*Задание 3
Составить запрос, который ответит на вопрос, есть ли среди студентов группы 3102 те, кто не имеет отчества.
*/

SELECT EXISTS (
	SELECT 1
	FROM Н_УЧЕНИКИ
	JOIN Н_ЛЮДИ ON Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
	WHERE Н_УЧЕНИКИ.ГРУППА = '3102' AND Н_ЛЮДИ.ОТЧЕСТВО = NULL
);

/* Задание 4
Найти группы, в которых в 2011 году было более 10 обучающихся студентов на ФКТИУ.
Для реализации использовать подзапрос.
*/

SELECT ГРУППА
FROM Н_УЧЕНИКИ
WHERE ПЛАН_ИД IN (
	SELECT Н_ПЛАНЫ.ИД
	FROM Н_ПЛАНЫ
	INNER JOIN Н_ОТДЕЛЫ ON Н_ОТДЕЛЫ.ИД = Н_ПЛАНЫ.ОТД_ИД
	WHERE Н_ОТДЕЛЫ.КОРОТКОЕ_ИМЯ LIKE 'КТиУ'
	AND Н_ПЛАНЫ.УЧЕБНЫЙ_ГОД LIKE '%2011%'
) GROUP BY ГРУППА
HAVING COUNT(ИД) > 10;

/* Задание 5
Выведите таблицу со средними оценками студентов группы 4100
(Номер, ФИО, Ср_оценка), у которых средняя оценка
не меньше максимальной оценк(е|и) в группе 1100.
*/

WITH MARKS1100 (ОЦЕНКА) AS(
	SELECT Н_ВЕДОМОСТИ.ОЦЕНКА
	FROM Н_ВЕДОМОСТИ
	JOIN Н_УЧЕНИКИ ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ВЕДОМОСТИ.ЧЛВК_ИД
	WHERE Н_УЧЕНИКИ.ГРУППА = '1100'
	AND Н_ВЕДОМОСТИ.ОЦЕНКА IN ('2', '3', '4', '5')
	GROUP BY Н_ВЕДОМОСТИ.ОЦЕНКА
)

SELECT Н_УЧЕНИКИ.ИД, Н_ЛЮДИ.ФАМИЛИЯ,
 Н_ЛЮДИ.ИМЯ, Н_ЛЮДИ.ОТЧЕСТВО, AVG(CAST(Н_ВЕДОМОСТИ.ОЦЕНКА AS INTEGER)) AS Ср_оценка
FROM Н_УЧЕНИКИ
JOIN Н_ЛЮДИ ON Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
JOIN Н_ВЕДОМОСТИ ON Н_ВЕДОМОСТИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
WHERE Н_УЧЕНИКИ.ГРУППА = '4100'
AND Н_ВЕДОМОСТИ.ОЦЕНКА IN ('2', '3', '4', '5')
GROUP BY Н_УЧЕНИКИ.ГРУППА, Н_УЧЕНИКИ.ИД, Н_ЛЮДИ.ФАМИЛИЯ,
 Н_ЛЮДИ.ИМЯ, Н_ЛЮДИ.ОТЧЕСТВО
HAVING AVG(CAST(Н_ВЕДОМОСТИ.ОЦЕНКА AS INTEGER)) >= (
    SELECT MAX(CAST (ОЦЕНКА AS INTEGER))
	FROM MARKS1100
);

/* Задание 6
Получить список студентов,
зачисленных до первого сентября 2012 года
на первый курс очной или заочной формы обучения (специальность: 230101).
В результат включить: номер группы; номер, фамилию, имя и отчество студента; номер и состояние пункта приказа;
Для реализации использовать подзапрос с IN.
*/

SELECT Н_УЧЕНИКИ.ГРУППА, Н_УЧЕНИКИ.ИД, Н_ЛЮДИ.ФАМИЛИЯ, Н_ЛЮДИ.ИМЯ,
Н_ЛЮДИ.ОТЧЕСТВО, Н_УЧЕНИКИ.П_ПРКОК_ИД, Н_УЧЕНИКИ.СОСТОЯНИЕ, Н_ПЛАНЫ.ДАТА_УТВЕРЖДЕНИЯ, Н_ПЛАНЫ.КУРС
FROM Н_ЛЮДИ
JOIN Н_ОБУЧЕНИЯ ON Н_ЛЮДИ.ИД = Н_ОБУЧЕНИЯ.ЧЛВК_ИД
JOIN Н_УЧЕНИКИ ON Н_ОБУЧЕНИЯ.ЧЛВК_ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
AND (Н_УЧЕНИКИ.СОСТОЯНИЕ = 'утвержден')
JOIN Н_ПЛАНЫ ON Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
AND (Н_ПЛАНЫ.КУРС = 1)
JOIN Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ ON Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ.ИД = Н_ПЛАНЫ.НАПС_ИД
JOIN Н_НАПР_СПЕЦ ON Н_НАПР_СПЕЦ.ИД = Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ.НС_ИД
AND Н_НАПР_СПЕЦ.КОД_НАПРСПЕЦ = '230101'
JOIN Н_ФОРМЫ_ОБУЧЕНИЯ ON Н_ПЛАНЫ.ФО_ИД = Н_ФОРМЫ_ОБУЧЕНИЯ.ИД
AND (Н_ФОРМЫ_ОБУЧЕНИЯ.НАИМЕНОВАНИЕ in ('Очная', 'Заочная'))
WHERE Н_ПЛАНЫ.ДАТА_УТВЕРЖДЕНИЯ IN (
	SELECT ДАТА_УТВЕРЖДЕНИЯ
	FROM Н_ПЛАНЫ
	WHERE ДАТА_УТВЕРЖДЕНИЯ < '2012-09-01'
)

/* Задание 7
Сформировать запрос для получения числа в СПбГУ ИТМО отличников.
*/

SELECT ОЦЕНКА, count(*)
FROM Н_ЛЮДИ
JOIN Н_ВЕДОМОСТИ ON Н_ВЕДОМОСТИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
WHERE Н_ВЕДОМОСТИ.ОЦЕНКА IN ('2', '3', '4', '5')
AND Н_ВЕДОМОСТИ.ОЦЕНКА = '5'
group by ОЦЕНКА